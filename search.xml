<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>星野</title>
    <url>/2019/11/02/%E6%98%9F%E9%87%8E/</url>
    <content><![CDATA[<hr>
<p>title: 星野<br>date: 2019-11-02 09:44:51<br>tags:</p>
<a id="more"></a>
<p>—                                                                                          浏览器安全<br>    I AM  COMING.</p>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/10/31/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>攻防</title>
    <url>/2020/07/17/%E6%94%BB%E9%98%B2/</url>
    <content><![CDATA[<hr>
<p>title:攻防<br>tags:</p>
<a id="more"></a>
<hr>
<p>1.<img data-src="https://img-blog.csdnimg.cn/20200717203900284.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MDMxMjc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img data-src="https://img-blog.csdnimg.cn/20200717203927844.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MDMxMjc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)WP：题目定义了一个demo类，首先包含构造函数，析构函数，和魔术方法（——wakeup()）当变量进行反序列化时回先执行wakeup函数,以及私有变量file。这里提示flag在fl4g.php之中，当实例销毁时会输出变量。再看下面GET传参var变量，变量经过base64解密，解密后经过正则表达式，若var变量存在o或者C不区分大小写输出stop hacking。否则进行发序列化。现在就是构造var变量的值。正则表达式可以采用+绕过，而wakeup在小于PHP7版本下可以通过实例值与对象值不相等绕过，再将fl4g.php进行序列化<br>O:4:”Demo”:1:{s:10:”Demofile”;s:8:”fl4g.php”;}在进行base64加密即可得到flag.<br>2.<img data-src="https://img-blog.csdnimg.cn/20200717205451969.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MDMxMjc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">/<br><img data-src="https://img-blog.csdnimg.cn/20200717205728637.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MDMxMjc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">WP:打开题目发现是个搜索框猜测题目类型为sql注入。使用SQL语句’ and 0 union select 1,TABLE_SCHEMA,TABLE_NAME from INFORMATION_SCHEMA.COLUMNS #去得到表名。<br><img data-src="https://img-blog.csdnimg.cn/20200717210932499.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MDMxMjc1,size_16,color_FFFFFF,t_70" alt="发现"><br>发现咱们需要的东西：secret_table。接下来去获取表单的内容’ and 0 union select 1,column_name,data_type from information_schema.columns where table_name=’secret_table’# 得到 secret_table。<br><img data-src="https://img-blog.csdnimg.cn/20200717211202256.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MDMxMjc1,size_16,color_FFFFFF,t_70" alt="发现"><br>发现flag存在的位置以记名字。<br>‘ and 0 union select 1,2,fl4g from secret_table #去得到flag。上述’去闭合前一个’，#去闭合最后一个。<br>3.<img data-src="https://img-blog.csdnimg.cn/20200717211510728.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MDMxMjc1,size_16,color_FFFFFF,t_70" alt="WP"><br>WP：这个题目是带一个附件的解压后是这样的<img data-src="https://img-blog.csdnimg.cn/2020071721164687.png!%5B%E5%9C%A8%E8%BF%99%E9%87%8C%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E6%8F%8F%E8%BF%B0%5D(https://img-blog.csdnimg.cn/2020071721174890.png" alt="在这里插入图片描述"></p>
<p>发现是这样的，里面是js语句，这里咱们猜测改下后缀名为.html，打开后页面时<img data-src="https://img-blog.csdnimg.cn/2020071721191654.png" alt="在这里插入图片描述">咱们再看下代码发现后面有个eval函数，这里咱们改为alert（），让页面去弹出源代码<br><img data-src="https://img-blog.csdnimg.cn/2020071721214696.png" alt="在这里插入图片描述"><br>在这个代码中要根据特定的正则表达式去得到var变量的值，再输入到搜索框中即可得到flag.根据代码得知var变量要16位以beof开头98aa结尾中间包含233ac和e98aa这样得到var变量值即可得到flag.<br>4.<img data-src="https://img-blog.csdnimg.cn/20200717212650602.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MDMxMjc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img data-src="https://img-blog.csdnimg.cn/20200717212701748.png" alt="在这里插入图片描述"><br>WP：这里我们打开题目发现一段英文，意思是你能得到这个真正的网站吗？咱们先输入index.php发现页面没有变化，再试试输入index.phps.发现<img data-src="https://img-blog.csdnimg.cn/20200717213020358.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MDMxMjc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这里要让id get传参后经过URLdecode不等于admin，第二要让admin等于id即可得到flag.这里代码进行了一次urldecode,再加上地址栏中一次总共两次，这里id 要满足两个条件必须url编码两次。即可得到flag。<br>5.<img data-src="https://img-blog.csdnimg.cn/20200717214151849.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MDMxMjc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img data-src="https://img-blog.csdnimg.cn/20200717214326192.png" alt="在这里插入图片描述"><br>WP：这里看到wakeup猜测为反序列化问题，同上第二题绕过wakeup，传参给code即可。O:4:”xctf”:2:{s:4:”flag”;s:3:”111”;}</p>
]]></content>
  </entry>
</search>
